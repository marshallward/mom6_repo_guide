commit dab1b7905d0b295f1acef9785bb2b9cbb0fdec84
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:13 2022 -0800

    The seventh batch
    
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 66633f25c620bc622663a484c34e817b6cd97764
Merge: 008adee208 6a5678f257
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:04 2022 -0800

    Merge branch 'bc/clarify-eol-attr'
    
    Documentation update
    
    * bc/clarify-eol-attr:
      doc: clarify interaction between 'eol' and text=auto

commit 008adee2087e8e78f767bbfdfd49d1d1eabf9469
Merge: 8813596531 332acc248d
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:04 2022 -0800

    Merge branch 'ds/mailmap'
    
    Update mailmap entries.
    
    * ds/mailmap:
      mailmap: change primary address for Derrick Stolee

commit 8813596531c08ed7488f85805cd0ec974a9c7c96
Merge: ebb866adae 087c745833
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:03 2022 -0800

    Merge branch 'ah/log-no-graph'
    
    "git log --graph --graph" used to leak a graph structure, and there
    was no way to countermand "--graph" that appear earlier on the
    command line.  A "--no-graph" option has been added and resource
    leakage has been plugged.
    
    * ah/log-no-graph:
      log: add a --no-graph option
      log: fix memory leak if --graph is passed multiple times

commit ebb866adae4f2a13939d0a4bd6901a506e911dba
Merge: 68fd3b35f7 bcdff626ee
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:03 2022 -0800

    Merge branch 'hw/t1410-adjust-test-for-reftable'
    
    Fix tests that are unnecessarily specific to ref-files backend.
    
    * hw/t1410-adjust-test-for-reftable:
      t1410: mark bufsize boundary test as REFFILES
      t1410: use test-tool ref-store to inspect reflogs

commit 68fd3b35f7ad703fd94218b9faf42baa34819f93
Merge: fb5e8587a0 b18aaaa5e9
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:03 2022 -0800

    Merge branch 'ps/fetch-optim-with-commit-graph'
    
    A couple of optimization to "git fetch".
    
    * ps/fetch-optim-with-commit-graph:
      fetch: skip computing output width when not printing anything
      fetch-pack: use commit-graph when computing cutoff

commit fb5e8587a04e4fec4b05563f92c17b8068f9edbe
Merge: c69e455bbc d4fe066e4b
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:03 2022 -0800

    Merge branch 'sy/t0001-use-path-is-helper'
    
    Test modernization.
    
    * sy/t0001-use-path-is-helper:
      t0001: replace "test [-d|-f]" with test_path_is_* functions

commit c69e455bbced1ae89ff386af889b65ad0b3b0927
Merge: e6ebfd0e8c 3d3c23b3a7
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 23 16:58:03 2022 -0800

    Merge branch 'bs/forbid-i18n-of-protocol-token-in-fetch-pack'
    
    L10n support for a few error messages.
    
    * bs/forbid-i18n-of-protocol-token-in-fetch-pack:
      fetch-pack: parameterize message containing 'ready' keyword

commit e6ebfd0e8cbbd10878070c8a356b5ad1b3ca464e
Author: Junio C Hamano <gitster@pobox.com>
Date:   Fri Feb 18 09:53:31 2022 -0800

    The sixth batch
    
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 9a1d16989fd8ab14c1831e143c39d29fe9192df1
Merge: 122c78dcb4 2df5387ed0
Author: Junio C Hamano <gitster@pobox.com>
Date:   Fri Feb 18 13:53:30 2022 -0800

    Merge branch 'jc/glossary-worktree'
    
    "working tree" and "per-worktree ref" were in glossary, but
    "worktree" itself wasn't, which has been corrected.
    
    * jc/glossary-worktree:
      glossary: describe "worktree"

commit 332acc248dd5213cb1d61be5538bb47ad26770e5
Author: Derrick Stolee <derrickstolee@github.com>
Date:   Mon Feb 14 16:45:53 2022 +0000

    mailmap: change primary address for Derrick Stolee
    
    Stolee transitioned from Microsoft to GitHub in July 2020, but continued
    to use <dstolee@microsoft.com> because it was a valid address. He also
    used <stolee@gmail.com> to communicate with the mailing list since
    writing plaintext emails is difficult in Outlook. However, recent issues
    with GMail delaying mailing list messages created a need to change his
    primary email address.
    
    Signed-off-by: Derrick Stolee <derrickstolee@github.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 6a5678f2576dba579e35c6d86b02584abee0ac37
Author: brian m. carlson <sandals@crustytoothpaste.net>
Date:   Mon Feb 14 10:15:43 2022 -0800

    doc: clarify interaction between 'eol' and text=auto
    
    The `eol` takes effect on text files only when the index has the
    contents in LF line endings.  Paths with contents in CRLF line
    endings in the index may become dirty unless text=auto.
    
    Signed-off-by: brian m. carlson <sandals@crustytoothpaste.net>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit d4fe066e4ba577afe585a640e245ce12331f6286
Author: Shaoxuan Yuan <shaoxuan.yuan02@gmail.com>
Date:   Fri Jan 21 18:21:09 2022 +0800

    t0001: replace "test [-d|-f]" with test_path_is_* functions
    
    Signed-off-by: Shaoxuan Yuan <shaoxuan.yuan02@gmail.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 3d3c23b3a754cf5060a93d9f777e58662cdd5ffe
Author: Bagas Sanjaya <bagasdotme@gmail.com>
Date:   Wed Dec 22 14:58:06 2021 +0700

    fetch-pack: parameterize message containing 'ready' keyword
    
    The protocol keyword 'ready' isn't meant for translation. Pass it as
    parameter instead of spell it in die() message (and potentially confuse
    translators).
    
    Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 087c745833be1edd3b3e4d8ea5d8b1a09fc6c245
Author: Alex Henrie <alexhenrie24@gmail.com>
Date:   Fri Feb 11 09:36:25 2022 -0700

    log: add a --no-graph option
    
    It's useful to be able to countermand a previous --graph option, for
    example if `git log --graph` is run via an alias.
    
    Signed-off-by: Alex Henrie <alexhenrie24@gmail.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit dccf6c16f1cee485f05ef42ba67a9309c358a78d
Author: Alex Henrie <alexhenrie24@gmail.com>
Date:   Fri Feb 11 09:36:24 2022 -0700

    log: fix memory leak if --graph is passed multiple times
    
    Signed-off-by: Alex Henrie <alexhenrie24@gmail.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit b18aaaa5e931d79d057f68ac0d7c3dd0377e5f03
Author: Patrick Steinhardt <ps@pks.im>
Date:   Thu Feb 10 13:28:16 2022 +0100

    fetch: skip computing output width when not printing anything
    
    When updating references via git-fetch(1), then by default we report to
    the user which references have been changed. This output is formatted in
    a nice table such that the different columns are aligned. Because the
    first column contains abbreviated object IDs we thus need to iterate
    over all refs which have changed and compute the minimum length for
    their respective abbreviated hashes. While this effort makes sense in
    most cases, it is wasteful when the user passes the `--quiet` flag: we
    don't print the summary, but still compute the length.
    
    Skip computing the summary width when the user asked for us to be quiet.
    This gives us a speedup of nearly 10% when doing a mirror-fetch in a
    repository with thousands of references being updated:
    
        Benchmark 1: git fetch --quiet +refs/*:refs/* (HEAD~)
          Time (mean ± σ):     96.078 s ±  0.508 s    [User: 91.378 s, System: 10.870 s]
          Range (min … max):   95.449 s … 96.760 s    5 runs
    
        Benchmark 2: git fetch --quiet +refs/*:refs/* (HEAD)
          Time (mean ± σ):     88.214 s ±  0.192 s    [User: 83.274 s, System: 10.978 s]
          Range (min … max):   87.998 s … 88.446 s    5 runs
    
        Summary
          'git fetch --quiet +refs/*:refs/* (HEAD)' ran
            1.09 ± 0.01 times faster than 'git fetch --quiet +refs/*:refs/* (HEAD~)'
    
    Signed-off-by: Patrick Steinhardt <ps@pks.im>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 6fd1cc8f985ccd8b014e945a819482b267dae21f
Author: Patrick Steinhardt <ps@pks.im>
Date:   Thu Feb 10 13:28:09 2022 +0100

    fetch-pack: use commit-graph when computing cutoff
    
    During packfile negotiation we iterate over all refs announced by the
    remote side to check whether their IDs refer to commits already known to
    us. If a commit is known to us already, then its date is a potential
    cutoff point for commits we have in common with the remote side.
    
    There is potentially a lot of commits announced by the remote depending
    on how many refs there are in the remote repository, and for every one
    of them we need to search for it in our object database and, if found,
    parse the corresponding object to find out whether it is a candidate for
    the cutoff date. This can be sped up by trying to look up commits via
    the commit-graph first, which is a lot more efficient.
    
    Benchmarks in a repository with about 2,1 million refs and an up-to-date
    commit-graph show an almost 20% speedup when mirror-fetching:
    
        Benchmark 1: git fetch +refs/*:refs/* (v2.35.0)
          Time (mean ± σ):     115.587 s ±  2.009 s    [User: 109.874 s, System: 11.305 s]
          Range (min … max):   113.584 s … 118.820 s    5 runs
    
        Benchmark 2: git fetch +refs/*:refs/* (HEAD)
          Time (mean ± σ):     96.859 s ±  0.624 s    [User: 91.948 s, System: 10.980 s]
          Range (min … max):   96.180 s … 97.875 s    5 runs
    
        Summary
          'git fetch +refs/*:refs/* (HEAD)' ran
            1.19 ± 0.02 times faster than 'git fetch +refs/*:refs/* (v2.35.0)'
    
    Signed-off-by: Patrick Steinhardt <ps@pks.im>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit bcdff626ee7ef7e5a643c381cf6f696b03e33649
Author: Han-Wen Nienhuys <hanwen@google.com>
Date:   Wed Feb 9 11:29:40 2022 +0000

    t1410: mark bufsize boundary test as REFFILES
    
    This test fiddles with files under .git/logs to recreate a condition
    that is unlikely to warrant special attention under reftable, as
    reflog blocks are zlib compressed.
    
    Signed-off-by: Han-Wen Nienhuys <hanwen@google.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 8c2d8d04f0154da31f3d64e52669fe835929273c
Author: Han-Wen Nienhuys <hanwen@google.com>
Date:   Wed Feb 9 11:29:39 2022 +0000

    t1410: use test-tool ref-store to inspect reflogs
    
    This makes the test compatible with reftable (it doesn't pass yet for
    other reasons, unfortunately)
    
    Signed-off-by: Han-Wen Nienhuys <hanwen@google.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

commit 2df5387ed04159b188de65dff9654d4aae1062d2
Author: Junio C Hamano <gitster@pobox.com>
Date:   Wed Feb 9 18:19:07 2022 -0800

    glossary: describe "worktree"
    
    We have description on "per worktree ref", but "worktree" is not
    described in the glossary.  We do have "working tree", though.
    
    Casually put, a "working tree" is what your editor and compiler
    interacts with.  "worktree" is a mechanism to allow one or more
    "working tree"s to be attached to a repository and used to check out
    different commits and branches independently, which includes not
    just a "working tree" but also repository metadata like HEAD, the
    index to support simultaneous use of them.  Historically, we used
    these terms interchangeably but we have been trying to use "working
    tree" when we mean it, instead of "worktree".
    
    Most of the existing references to "working tree" in the glossary do
    refer primarily to the working tree portion, except for one that
    said refs like HEAD and refs/bisect/* are per "working tree", but it
    is more precise to say they are per "worktree".
    
    Signed-off-by: Junio C Hamano <gitster@pobox.com>
